#!/bin/bash
#
# Attach or create tmux session named the same as current directory.
#
# If called with . or without a directory name ta will create a plain
# single window layout

 not_in_tmux() {
   [ -z "$TMUX" ]
 }

DIR=$1

# If no arguments are passed in try to immediately attach or start without further input
echo $DIR
if [ -z "$DIR" ]; then
   if not_in_tmux; then
     tmux attach && exit 1 || DIR="."
   fi
fi

# If . was passed in immediately start a new session based on the current directory
if [ "$DIR" == "." ]; then
    echo "starting"
    path_name="$(basename "$PWD" | tr . -)"
    session_name=${path_name//./_}
else
    # ask the user which directory to start in
    # _session_name=$(cd $DIR && ls -d */ | sed  "s|/||g" | fzf --reverse --header="Select project from $(basename $DIR) >")
    _session_name=$(find ~/development /opt/ ~/ -mindepth 1 -maxdepth 1 -type d | fzf --reverse --header="Select project >")
    _session_name=${_session_name//./_}
    session_name="$(basename "$_session_name" | tr . -)"
    path_name=$_session_name
fi

if [ -z "$session_name" ]; then
    # operation cancelled by user
    exit 1
fi

session_exists() {
    # checks if the $session_name exists
    tmux has-session -t "=$session_name"
}
 
create_detached_session() {
if [ "$DIR" == "." ]; then
    tmux new-session -Ad -s "$session_name" -c $path_name
else
    tmux new-session -Ad -s "$session_name" -c $path_name;
fi
 }
 
create_if_needed_and_attach() {
    if not_in_tmux; then
        tmux new-session -As "$session_name" -c $path_name
    else
        if ! session_exists; then
        create_detached_session
        fi
        tmux switch-client -t "$session_name"
    fi
}

 attatch_to_first_session() {
     tmux attach -t $(tmux list-sessions -F "${session_name}" | head -n 1)
     tmux choose-tree -Za
}
 
create_if_needed_and_attach || attatch_to_first_session
